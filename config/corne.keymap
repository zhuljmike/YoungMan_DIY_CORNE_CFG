/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
         &kp TAB  &kp Q  &kp W            &kp E                        &kp R               &kp T                  &kp Y                          &kp U               &kp I    &kp O     &kp P  &kp BSPC
&mt LEFT_WIN ESC  &kp A  &kp S            &kp D                        &kp F               &kp G                  &kp H                          &kp J               &kp K    &kp L  &kp SEMI   &kp SQT
          &tog 1  &kp Z  &kp X            &kp C                        &kp V               &kp B                  &kp N                          &kp M           &kp COMMA  &kp DOT  &kp FSLH    &tog 2
                                &mt LCTRL ENTER  &mt LEFT_SHIFT LEFT_BRACKET  &mt LEFT_GUI MINUS    &mt RIGHT_GUI EQUAL  &mt RIGHT_SHIFT RIGHT_BRACKET  &mt LEFT_ALT SPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp F11        &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6         &kp F7     &kp F8     &kp F9   &kp F10  &kp BSPC
&kp F12  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5      &kp LEFT       &kp DOWN     &kp UP  &kp RIGHT  &kp HOME   &kp END
  &to 0  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0    &kp DELETE  &kp PAGE_DOWN  &kp PG_UP     &trans    &trans    &trans
                                           &trans        &trans        &trans        &trans         &trans     &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp TILDE  &kp UNDER  &kp PLUS        &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp GRAVE     &kp MINUS     &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET      &kp BSPC
&trans   &kp EXCL     &kp AT  &kp HASH            &kp DOLLAR            &kp PERCENT       &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1      &bt BT_SEL 2       &bt BT_SEL 3  &bt BT_SEL 4
&trans  &kp CARET   &kp AMPS  &kp STAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp BACKSLASH      &kp PIPE        &trans            &trans             &trans         &to 0
                                &trans                &trans                 &trans           &trans        &trans        &trans
            >;
        };

        layer_3 {
            bindings = <
    &trans             &trans           &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans
&kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP   &kp C_PAUSE    &kp C_NEXT    &kp C_PREV    &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR       &bt BT_SEL 0     &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
                                                      &trans        &trans        &trans    &trans  &trans  &trans
            >;
        };
    };
};
